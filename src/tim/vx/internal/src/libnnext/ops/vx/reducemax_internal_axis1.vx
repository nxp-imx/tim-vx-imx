#include "cl_viv_vx_ext.h"

_viv_uniform int         axisSize;
_viv_uniform float       outputScale;
_viv_uniform float       output_offset_asymmetric;
_viv_uniform float       inputScale;
_viv_uniform float       input_offset_asymmetric;
_viv_uniform VXC_512Bits uniGetLoData_4x4;

_viv_uniform VXC_512Bits uniConvertInt32toUint8_2x8;
_viv_uniform VXC_512Bits uniGetHiData_4x4;

#define REDUCEMAX_PROCESS_AXIS1(read_fun, vert_max_fun) \
    read_fun(in0, input, coord, 0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0)); \
    _viv_asm(COPY, max, in0, 16); \
    coord.y++; \
    do \
    { \
        read_fun(in0, input, coord, 0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0)); \
        _viv_asm(COPY, vec0, in0, 16); \
        vert_max_fun(max, max, max, vec0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0)); \
        coord.y++; \
    } \
    while(coord.y < axisSize);

#define REDUCEMAX_PROCESS_AXIS1_SAVE_SAME(save_type, write_fun) \
    save_type vect; \
    _viv_asm(COPY, vect, max, 16); \
    write_fun(output, coord_out, vect, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

#define REDUCEMAX_PROCESS_AXIS1_SAVE(dst_type, save_type, conv_mode,\
OUT_SCALE, OUT_OFFSET, IN_SCALE, IN_OFFSET, write_fun) \
    dst_type dst0, dst1; \
    save_type vect; \
    VXC_DP4x4(data0, max, max, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), uniGetLoData_4x4); \
    data0 = ((data0 - IN_OFFSET) * IN_SCALE) * OUT_SCALE + OUT_OFFSET; \
    _viv_asm(conv_mode, dst0, data0); \
    VXC_DP4x4(data0, max, max, VXC_MODIFIER(0, 3, 0, VXC_RM_TowardZero, 0), uniGetHiData_4x4); \
    data0 = ((data0 - IN_OFFSET) * IN_SCALE) * OUT_SCALE + OUT_OFFSET; \
    _viv_asm(conv_mode, dst1, data0); \
    VXC_DP2x8(vect, dst0, dst1, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), uniConvertInt32toUint8_2x8); \
    write_fun(output, coord_out, vect, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

#define REDUCEMAX_AXIS1_SAME(src_name, dst_name, src_type, copy_type, save_type, vert_max_fun) \
__kernel void reducemax_axis1_##src_name##to##dst_name \
    ( \
    __read_only  image2d_array_t input, \
    __write_only image2d_array_t output, \
    int   axisVal \
    ) \
{ \
    int4 coord = (int4)(get_global_id(0), 0, get_global_id(1), 0); \
    int2 coord_out = (int2)(get_global_id(0), get_global_id(1)); \
    src_type vec0, max; \
    copy_type in0; \
    vxc_float4 data0; \
    REDUCEMAX_PROCESS_AXIS1(VXC_ReadImage2DArray, vert_max_fun) \
    REDUCEMAX_PROCESS_AXIS1_SAVE_SAME(save_type, VXC_WriteImage); \
}

#define REDUCEMAX_AXIS1(src_name, dst_name, src_type, copy_type, dst_type, save_type,\
conv_mode, OUT_SCALE, OUT_OFFSET, IN_SCALE, IN_OFFSET, vert_max_fun) \
__kernel void reducemax_axis1_##src_name##to##dst_name \
    ( \
    __read_only  image2d_array_t input, \
    __write_only image2d_array_t output, \
    int   axisVal \
    ) \
{ \
    int4 coord = (int4)(get_global_id(0), 0, get_global_id(1), 0); \
    int2 coord_out = (int2)(get_global_id(0), get_global_id(1)); \
    src_type vec0, max; \
    copy_type in0; \
    vxc_float4 data0; \
    REDUCEMAX_PROCESS_AXIS1(VXC_ReadImage2DArray, vert_max_fun) \
    REDUCEMAX_PROCESS_AXIS1_SAVE(dst_type, save_type, conv_mode,\
    OUT_SCALE, OUT_OFFSET, IN_SCALE, IN_OFFSET, VXC_WriteImage); \
}



REDUCEMAX_AXIS1_SAME(F16, F16, vxc_half8, vxc_short8,  vxc_short8, VXC_VertMax3_Half)


REDUCEMAX_AXIS1(F16, I16, vxc_half8, vxc_short8, short4, vxc_short8,\
CONV_SAT_RTE, outputScale, 0, 1, 0, VXC_VertMax3_Half)
REDUCEMAX_AXIS1(F16, I8,  vxc_half8, vxc_short8, char4,  vxc_char8, \
CONV_SAT_RTE, outputScale, 0, 1, 0, VXC_VertMax3_Half)
REDUCEMAX_AXIS1(F16, U8,  vxc_half8, vxc_short8, uchar4, vxc_uchar8,
CONV_SAT_RTE, outputScale, output_offset_asymmetric, 1, 0, VXC_VertMax3_Half)
REDUCEMAX_AXIS1(I16, F16, vxc_short8, vxc_short8, half4,  vxc_short8,\
CONV, 1, 0, inputScale, 0, VXC_VertMax3_Integer)
REDUCEMAX_AXIS1(I8, F16, vxc_char16, vxc_char16, half4,  vxc_short8,\
CONV, 1, 0, inputScale, 0, VXC_VertMax3_Integer)
REDUCEMAX_AXIS1(U8, F16, vxc_uchar16, vxc_uchar16, half4,  vxc_short8,
CONV, 1, 0, inputScale, input_offset_asymmetric, VXC_VertMax3_Integer)
REDUCEMAX_AXIS1(I16, I16, vxc_short8, vxc_short8, short4, vxc_short8,
CONV_SAT_RTE, outputScale, 0, inputScale, 0, VXC_VertMax3_Integer)
REDUCEMAX_AXIS1(I8, I8,  vxc_char16, vxc_char16,  char4, vxc_char8,
CONV_SAT_RTE, outputScale, 0, inputScale, 0, VXC_VertMax3_Integer)
REDUCEMAX_AXIS1(U8, U8,  vxc_uchar16, vxc_uchar16, uchar4, vxc_uchar8, CONV_SAT_RTE,\
outputScale, output_offset_asymmetric, inputScale, input_offset_asymmetric, VXC_VertMax3_Integer)


#define REDUCEMAX_AXIS1_SAME_2D(src_name, dst_name, src_type, copy_type, save_type, vert_max_fun) \
__kernel void reducemax_axis1_##src_name##to##dst_name##_2D \
    ( \
    __read_only  image2d_array_t input, \
    __write_only image2d_array_t output, \
    int   axisVal \
    ) \
{ \
    int2 coord = (int2)(get_global_id(0), 0); \
    int2 coord_out = (int2)(get_global_id(0), 0); \
    src_type vec0, max; \
    copy_type in0; \
    vxc_float4 data0; \
    REDUCEMAX_PROCESS_AXIS1(VXC_ReadImage, vert_max_fun) \
    REDUCEMAX_PROCESS_AXIS1_SAVE_SAME(save_type, VXC_WriteImage); \
}

#define REDUCEMAX_AXIS1_2D(src_name, dst_name, src_type, copy_type, dst_type,\
save_type, conv_mode, OUT_SCALE, OUT_OFFSET, IN_SCALE, IN_OFFSET, vert_max_fun) \
__kernel void reducemax_axis1_##src_name##to##dst_name##_2D \
    ( \
    __read_only  image2d_array_t input, \
    __write_only image2d_array_t output, \
    int   axisVal \
    ) \
{ \
    int2 coord = (int2)(get_global_id(0), 0); \
    int2 coord_out = (int2)(get_global_id(0), 0); \
    src_type vec0, max; \
    copy_type in0; \
    vxc_float4 data0; \
    REDUCEMAX_PROCESS_AXIS1(VXC_ReadImage, vert_max_fun) \
    REDUCEMAX_PROCESS_AXIS1_SAVE(dst_type, save_type, conv_mode,\
    OUT_SCALE, OUT_OFFSET, IN_SCALE, IN_OFFSET, VXC_WriteImage); \
}

REDUCEMAX_AXIS1_SAME_2D(F16, F16, vxc_half8, vxc_short8,  vxc_short8, VXC_VertMax3_Half)

REDUCEMAX_AXIS1_2D(F16, I16, vxc_half8, vxc_short8, short4, vxc_short8,\
CONV_SAT_RTE, outputScale, 0, 1, 0, VXC_VertMax3_Half)
REDUCEMAX_AXIS1_2D(F16, I8,  vxc_half8, vxc_short8, char4,  vxc_char8, \
CONV_SAT_RTE, outputScale, 0, 1, 0, VXC_VertMax3_Half)
REDUCEMAX_AXIS1_2D(F16, U8,  vxc_half8, vxc_short8, uchar4, vxc_uchar8,
CONV_SAT_RTE, outputScale, output_offset_asymmetric, 1, 0, VXC_VertMax3_Half)
REDUCEMAX_AXIS1_2D(I16, F16, vxc_short8, vxc_short8, half4,  vxc_short8,\
CONV, 1, 0, inputScale, 0, VXC_VertMax3_Integer)
REDUCEMAX_AXIS1_2D(I8, F16, vxc_char16, vxc_char16, half4,  vxc_short8,\
CONV, 1, 0, inputScale, 0, VXC_VertMax3_Integer)
REDUCEMAX_AXIS1_2D(U8, F16, vxc_uchar16, vxc_uchar16, half4,
vxc_short8, CONV, 1, 0, inputScale, input_offset_asymmetric, VXC_VertMax3_Integer)
REDUCEMAX_AXIS1_2D(I16, I16, vxc_short8, vxc_short8,\
short4, vxc_short8, CONV_SAT_RTE, outputScale, 0, inputScale, 0, VXC_VertMax3_Integer)
REDUCEMAX_AXIS1_2D(I8, I8,  vxc_char16, vxc_char16,\
char4, vxc_char8, CONV_SAT_RTE, outputScale, 0, inputScale, 0, VXC_VertMax3_Integer)
REDUCEMAX_AXIS1_2D(U8, U8,  vxc_uchar16, vxc_uchar16, uchar4, vxc_uchar8, CONV_SAT_RTE,\
outputScale, output_offset_asymmetric, inputScale, input_offset_asymmetric, VXC_VertMax3_Integer)
