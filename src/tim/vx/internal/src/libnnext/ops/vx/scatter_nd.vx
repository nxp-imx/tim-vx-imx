#include "cl_viv_vx_ext.h"

_viv_uniform VXC_512Bits uniAccumulateSum_2x8;
_viv_uniform int index_num;
_viv_uniform int zeropoint;
_viv_uniform int offsetX;
_viv_uniform int offsetY;
_viv_uniform int offsetZ;

__kernel void scatter_nd_F16toF16(
    __read_only image2d_t   input0,
    __read_only image2d_t   input1,
    image2d_array_t  output,
    int width,
    int area,
    int coord_dim
    )
{
    int gidx = get_global_id(0);
    int gidy = get_global_id(1);

    vxc_short8 tmpVal = (vxc_short8)(0, 0, 0, 0, 0, 0, 0, 0);
    vxc_half8 sum;
    _viv_asm(COPY, sum, tmpVal, 16);
    for(int i = 0; i < index_num; i++)
    {
        int4 indice = read_imagei(input0, (int2)(0, i));
        int idx = indice.x * offsetX + indice.y * offsetY + indice.z * offsetZ;
        if(gidy == idx)
        {
            vxc_half8 src;
            VXC_ReadImage(tmpVal, input1, (int2)(gidx, i), 0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
            _viv_asm(COPY, src, tmpVal, 16);
            VXC_DP2x8(sum, sum, src, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), uniAccumulateSum_2x8);
        }
    }
    _viv_asm(COPY, tmpVal, sum, 16);
    VXC_WriteImage(output, (int2)(gidx, gidy), tmpVal, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
}

#define SCATTER_ND_QINT(src0_type_name, data_type) \
__kernel void scatter_nd_##src0_type_name##to##src0_type_name##( \
    __read_only image2d_t   input0, \
    __read_only image2d_t   input1, \
    image2d_array_t  output, \
    int width, \
    int area, \
    int coord_dim \
    ) \
{ \
    int gidx = get_global_id(0);  \
    int gidy = get_global_id(1); \
    int firstFlg = 1; \
 \
    data_type sum = (data_type)(0, 0, 0, 0, 0, 0, 0, 0); \
    for(int i = 0; i < index_num; i++) \
    { \
        int4 indice = read_imagei(input0, (int2)(0, i)); \
        int idx = indice.x * offsetX + indice.y * offsetY + indice.z * offsetZ; \
        if(gidy == idx) \
        { \
            data_type src; \
            VXC_ReadImage(src, input1, (int2)(gidx, i), 0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0)); \
            VXC_DP2x8(sum, sum, src, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0), uniAccumulateSum_2x8); \
            if(firstFlg) \
            { \
                firstFlg = 0; \
            } \
        } \
    } \
    if(firstFlg) \
    { \
        sum = (data_type)(zeropoint, zeropoint, zeropoint, zeropoint, \
                             zeropoint, zeropoint, zeropoint, zeropoint); \
    } \
    VXC_WriteImage(output, (int2)(gidx, gidy), sum, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0)); \
}
SCATTER_ND_QINT(U8,  vxc_uchar8)
SCATTER_ND_QINT(I8,  vxc_char8)
SCATTER_ND_QINT(I16, vxc_short8)
